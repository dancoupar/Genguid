using System.Runtime.InteropServices;

namespace Genguid.Factories
{
	/// <summary>
	/// A factory for generating COMB or sequential GUIDs. This class cannot be inherited.
	/// </summary>
	internal sealed class CombGuidFactory : GuidFactory
	{
		/// <summary>
		/// Generates a new System.Guid whose value is almost certain to be greater than any
		/// instance previously generated by this factory method.
		/// </summary>
		protected override Guid Generate()
		{
			// Use a Win32 API function to generate a sequential GUID
			UuidCreateSequential(out Guid g);

			// Shuffle the bytes around to ensure the new GUID is consistent with what SQL Server would generate
			byte[] bytes = g.ToByteArray();

			// Example: 6F9F9BFC-1203-11DD-BC40-001641E22FDB --> FC9B9F6F-0312-DD11-BC40-001641E22FDB
			Array.Reverse(bytes, 0, 4);
			Array.Reverse(bytes, 4, 2);
			Array.Reverse(bytes, 6, 2);

			return new Guid(bytes);
		}

		/// <summary>
		/// A pointer to the unmanaged Win32 API function used for generating sequential GUIDs.
		/// </summary>
		[DllImport("rpcrt4.dll", SetLastError = true)]
		static extern int UuidCreateSequential(out Guid guid);
	}
}
